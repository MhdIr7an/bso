---
interface Props {
	title?: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="BSO Real Estate Management" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
        <script is:inline src="https://app.lemonsqueezy.com/js/lemon.js" defer></script>
		<title>{title? title : 'BPO Real Estate Management'}</title>
        <link rel="manifest" href="/manifest.json">
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	:root {
		--color-primary: #2C2A43;
		--color-secondary: #C9E169;

		--color-background: #E6ECF4;
		--color-input: #E6F3F4;
	}

    * {
        margin: 0;
        padding: 0;
    }

	body {
        color: var(--color-primary);
        background-color: var(--color-background);
    }

    button {
        background-color: transparent;
        border: none;
    }
    input, textarea {
        background-color: var(--color-input);
        border-bottom: 2px solid var(--color-secondary);
        resize: none;

        &:focus {
            outline: none;
        }
    }

    a {
        text-decoration: none;
        color: var(--color-primary);
        font-size: 16px;
    }

    table {
        width: 100%;
        border-color: var(--color-primary);
    }

    thead, th, td {
        border-color: var(--color-primary);
    }

    .AuthMain {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .Main {
        margin-left: 320px;
        margin-right: 10px;
        margin-top: 45px;

        &__section {
            display: flex;
            flex-direction: column;
        }
    }

    .Heading {
        text-decoration: underline;
        font-size: 34px;
        font-weight: 600;
    }

    .main-scroll {
        &::-webkit-scrollbar {
            width: 5px;
            height: 5px;
        }

        &:hover {
            &::-webkit-scrollbar-thumb {
                background-color: var(--color-primary);
                box-shadow: 0 0 5px var(--color-primary);
            }
        }

        &::-webkit-scrollbar-track {
            background-color: transparent;
        }
    }

    .custom-scroll {
        &::-webkit-scrollbar {
            width: 3px;
            height: 5px;
        }

        &:hover {
            &::-webkit-scrollbar-thumb {
                background-color: var(--color-secondary);
                box-shadow: 0 0 5px var(--color-secondary);
            }
        }

        &::-webkit-scrollbar-track {
            background-color: transparent;
        }
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
</style>
<script>
    if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
            navigator.serviceWorker.register('/service-worker.js')
            .then((registration) => {
                console.log('Service Worker registered with scope:', registration.scope);

                if (navigator.serviceWorker.controller) {
                    console.log('Service Worker is controlling the page.');
                } else {
                    console.log('Service Worker is not yet controlling the page.');
                }
            })
            .catch((error) => {
                console.error('Service Worker registration failed:', error);
            });
        });
    }
</script>