---
interface ProductType {
  documentId: string;
  Title: string;
  Price: number;
  Image: any;
}

import ProductCard from "../../components/ProductCard.astro"
import BaseLayout from "../../layouts/BaseLayout.astro";

let products: ProductType[] = [];

try {
  const api_url = import.meta.env.API_URL;
  const response = await fetch(`${api_url}/products?populate=Image`);

  if (!response.ok) {
    throw new Error('Failed to fetch products');
  }

  const data = await response.json();
  products = Array.isArray(data) ? data : data.data || [];
} catch (error) {
  console.error('Error fetching products:', error);
}
---

<BaseLayout current_page="catalog">
  <section class="m-12">
    <h1 class="mb-5 underline text-[34px] font-semibold">Catalog</h1>
    <div class="grid lg:grid-cols-2 xl:grid-cols-4 gap-4">
      {products.length > 0
        ? products.map((product: ProductType) => (
            <ProductCard
              product_name={product.Title}
              price={product.Price}
              id={product.documentId}
              image={product.Image[0].url}
            />
          ))
        : <p>No products available.</p>}
    </div>
  </section>
</BaseLayout>